name: CI/CD Pipeline

on: 
  push:
    branches:
      - '**'
  pull_request:
    branches:
      - '**'

env:
  GCP_PROJECT_ID: cogent-sign-431114-e4
  GKE_CLUSTER: autopilot-cluster-1    # cluster name
  GKE_ZONE: asia-south1   # cluster zone
  GAR_ZONE: asia-south1 # artifact registry zone


jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.x'
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install flake8 autopep8
      - name: Fix lint errors
        run: |
          autopep8 --in-place --aggressive --aggressive $(find src -name "*.py")
          autopep8 --in-place --aggressive --aggressive $(find tests -name "*.py")
      - name: Lint code
        run: |
          flake8 src/ tests/

  test:
    runs-on: ubuntu-latest
    env:
      PYTHONPATH: ${{ github.workspace }}/src
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.10.9'
      - name: Install dependencies
        run: |
          python -m pip install pip
          pip install setuptools pytest flask joblib numpy==1.21.6 scikit-learn==1.2.1
      - name: Run tests
        run: |
          pytest


  deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up Python 3.10.9
      uses: actions/setup-python@v2
      with:
        python-version: '3.10.9'

    - name: Set CLOUDSDK_PYTHON environment variable
      run: echo "CLOUDSDK_PYTHON=$(which python3)" >> $GITHUB_ENV

    - name: Install Google Cloud SDK
      uses: google-github-actions/setup-gcloud@v1
      with:
        project_id: ${{ secrets.GCP_PROJECT_ID }}
        service_account_key: ${{ secrets.GCP_SA_KEY }}
        export_default_credentials: true

    # Setup gcloud CLI
    - id: 'auth'
      uses: 'google-github-actions/auth@v1'
      with:
        credentials_json: '${{ secrets.GCP_SA_KEY }}'

    # Configure Docker to use the gcloud command-line tool as a credential
    # helper for authentication
    - name: Docker configuration
      run: |-
        gcloud auth print-access-token | docker login -u oauth2accesstoken --password-stdin https://$GAR_ZONE-docker.pkg.dev


    # Configure Docker to use the gcloud command-line tool as a credential helper
    - name: Configure Docker authentication
      run: |
        gcloud auth configure-docker --quiet


    # Get the GKE credentials so we can deploy to the cluster
    - name: Set up GKE credentials
      uses: google-github-actions/get-gke-credentials@v1
      with:
        cluster_name: ${{ env.GKE_CLUSTER }}
        location: ${{ env.GKE_ZONE }}
        project_id: ${{ secrets.GCP_PROJECT_ID }}

    - name: Build and push Docker image
      run: |
        docker build -t gcr.io/${{ secrets.GCP_PROJECT_ID }}/fastapi-docker-ml:v1 .
        docker push gcr.io/${{ secrets.GCP_PROJECT_ID }}/fastapi-docker-ml:v1

    - name: Deploy to GKE
      run: |
        kubectl apply -f k8s/deployment.yaml
        kubectl apply -f k8s/service.yaml










